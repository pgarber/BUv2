
source /Users/philgarber/.rvm/scripts/rvm

views from divshot:
homepage.html went into users/_homepage.html.erb
myfeedback went into users/show.html.erb - now put it in users/myfeedback
landing.html went into shared/_landing.html.erb  -> now put in static_pages/_landing
leaderboard.html went into users/leaderboard.html (should it be a partial?)
give_feedback.html went into static_pages/give_feedback.html.erb -> now in show.html.erb

try to do better design with shared/_signed_in_sidebar.html.erb

to do:
- anyone signed in user can see other users' full feedback 
  redirect to homepage if they try to do that
- 

2/5/14: created Attributes controller and Attribute model
		created Feedbacks controller and Feedback model

NOW WORKING in code/BUv2 - still called branch BU_hartl (and sample app still has a BU_hartl but I checked out)		

- add ember.js and Addepar for graphing.  put Handlebars and ember.js 1.3 into code/BUv2/vendor.  load them in layouts/application.html.erb

Things I did
$ rails generate controller Attributes --no-test-framework
$ rails generate model Attribute attribute_name:string good:binary opposite_id:integer
$ rake db:migrate

$ rails g migration add_ratings_to_users ratings:array
$ rake db:migrate

$ rake db:crunch_ratings

$ rails g migration change_ratings_format_in_users_table

create branch screwed_up_db - just in case I make things even worse than they are now.


THINGS I DONT UNDERSTAND
- edit.html.erb: f.password ... f.submit

ran git checkout -b old-state ...
and now things are working OK (other than not being able to change my db structure and rake db:crunch_ratings fails) so I merged this back into branch BU_hartl

Try changing ratings column to type TEXT in SQLite DB Browser

It's finally on github.  for some reason, it wasn't happy with the existing publickey.


MESSING WITH DB:
rake db:drop   // makes the sqlite file disappear!
rake db:migrate (make sure password stuff is not commented out) // puts in db & empty tables
rake db:populate  // puts all the Hartl stuff like users in
rake db:seed      // puts my attributes list in the db
rails generate migration add_ratings_to_users ratings:hash
rake db:migrate
  try new db format:
rails generate controller Ratings --no-test-framework
rails generate model Rating user_id:integer attribute_id:integer current_rating:float
rake db:migrate


rake db:crunch_ratings

so, Users still has a ratings column, but it's not being used.  I'm just having trouble deleting it

I can't figure out a way to debug the javascript for Google Charts.  So try chartkick which uses javascript, but only requires me to write in ruby.


2/17/14.  Add slider bar functionality.  Need 1to10 ratings in models & controllers
$ rails g migration add_rating_given_to_feedbacks rating_given:float
$ rake db:migrate
put 1to10 ratings in seeds
$ rake db:seed // put the attributes in again - delete them first
$ rails console

# This method works now that I'm working off of identifier rather than id
> attrib = Attribute.all
> attrib.delete_all  // this doesnt' reset id to 1 when you reseed.  Do following instead

> ActiveRecord::Base.connection.execute("DELETE from sqlite_sequence where name = 'attributes'")
$ rake db:seed

changed to Simplex theme by Bootswatch by replacing custom.css.scss contents with that of bootstrap.css from bootswatch.com Simplex theme

Got sliders working, merged back to main.  John is helping with unit tests

$ rails g migration AddAttributeIdentifier   # then put 4 lines in new migrations file
$ rake db:migrate
$ rails g migration ChangeOppositeidName # had to do another migration because I already ran the previous migration
$ rake db:migrate
# update seeds.rb
$ rake db:seed


Now, add Companies  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
$ git checkout -b companies
$ rails g controller Companies new --no-test-framework
$ rails g model Company domain:string name:string

$ rails g controller Company_employees new --no-test-framework
$ rails g model Company_employee company_id:integer user_id:integer user_in_group:hash
 # I should either do CompanyEmployee or company_employee.  Not Company_employee
destroy these (destroy controller, destroy model, g migration to drop_table) and do
$ rails g controller CompanyEmployees new --no-test-framework
$ rails g model CompanyEmployee company_id:integer user_id:integer

try to get all users to have a Company and a CompanyEmployee
rake db:drop   // makes the sqlite file disappear!  / next time just delete some tables.
rake db:migrate  // puts in db & empty tables
rake db:populate  // puts all the Hartl stuff like users in
rake db:seed      // puts my attributes list in the db

> # delete_all of users and company_employees
$ rake db:populate
$ rake db:seed # for attributes

Now, on to the next table: Project
WRONG: $ rails g controller Project new --no-test-framework   # should have been Projects here - with an "s"!
$ rails g model Project name:string domain_id:integer 


todo: 
fix homepage so that it doesn't error when ratings aren't right
crunch_ratings comes up with 1 - is that because the feedback only came from 1 other user? When  I gave more ratings from the same person after a rake, the new ratings went in.  I think that crunch_ratings
ignores multiple feedbacks of the same type on the same day / crunch_ratings

Not sure I need this but create ProjectActtribute:
$ rails g controller ProjectAttributes new --no-test-framework   
$ rails g model ProjectAttribute identifier:integer project_attribute_name:string project_id:integer 
$ rake db:migrate

Side project: change the navbar appearance.
It seems like "navbar navbar-fixed-top navbar-inverse" and "navbar-inner" are missing from any css file.  So maybe the navbar is defaulting.  Try adding in the css definitions
views/layouts/_header is the only file that calls a header
It's a little confusing how my styling is put together now and I don't have it all figured out.  I might just want to use a nice theme like geteco.com - If I could find that theme.  
The navbar is called in _header.html.erb.
The two relevant css files are app/assets/custom.css.scss and bootswatch_simplex.css.scss

ProjectFeedback tables:
$ rails g controller ProjectFeedbacks new --no-test-framework   
$ rails g model ProjectFeedback from_id:integer to_project_id:integer project_attribute_identifier:integer rating_given:integer 
add project_attribute table's identifier uniqueness to this migration
$ rake db:migrate

All of a sudden, users is gone from tmy sqlite db and schema.rb.  views controllers, helpers and models is still there though.  It looks like I tried to dumb table users before, and that was unsuccesful.
Put the users code back into schema.rb
$ rake db:schema:load
$ rake db:seed
$ rake db:populate  # users populated but company_employees 

To get the db in order:
$ rake db:seed   #order of seed & populate shouldn't matter
$ rake db:populate
$ rake db:migrate
$ rake db:crunch_ratings

Next to do: make page for rating company projects and one for viewing results.  Or should they be the same?  Also, a histogram would be nice for projects also.  Right now I don't have a page for showing a given user's performance.  Should that be on the same page as the rating inputs?  That would be easier from a design perspective but probably worse from the stanpoint of getting accurate input.  Probably get more feedback with input and output of ratings on the same page.  

So, at the top of users/show and projects/show, put the graphs.  - Done

Next, show only for users and projects in your own company.  Also, make sure startegy data is working & plotting correctly. 
Back on branch master

Project: index foreign keys and use them!
	my analysis of foreign keys:
	users: none
	attributes: none
	feedbacks: from_id, to_id, attribute_identifier
	microposts: user_id (look at Hartl code) doesn't show up below since it's already indexed
	ratings: user_id, attribute_identifier
	companies: none
	company_employees: company_id, user_id  - make this a join table if not already.
	projects: domain_id
	project_attributes: project_id
	missed: project_feedbacks: from_id, to_project_id


	method from https://tomafro.net/2009/09/quickly-list-missing-foreign-key-indexes
	company_employees: company_id, user_id
	feedbacks: from_id, to_id   [not attribute_identifier ??]
	project_attributes: project_id
	projects: domain_id
	ratings: user_id [not attribute_identifier ???]
	project_feedbacks: from_id, to_project_id

	First, put all these indexes in schema.rb and get everything working.  Then, go one step further and replace company_employees witha join table (see Rails Recipes first recipe)
	In the models, I might need belongs_to like microposts has

	histogram_project_data I made a lot simpler and, I think, faster.  not sure I used any of the new
	indexes though.

	$ rails g migration change_company_employees_to_employment   #NO - deleted the file!  Dont bother renaming it.  
	Companies have many users through company_employees.  use "has many through" rather than "has many and belongs to many".  Since I set up a controller and a model for company_employees, it is a join model (just not named perfectly), rather than just being a join table.  

	class CompanyEmployee model
	   belongs_to: user
	   belongs_to: company
	
	class Company < ActiveRecord::Base
	  has_many :company_employees
  	  has_many :users, :trhough => :company_employees

$ rails g model ProjectRating project_id:integer project_attribute_identifier:integer current_rating:float num_fb_received:float
$ rake db:migrate
-> didn't do a controller because I don't need it.  Do I even need a model, or just a table?
$ add_column :project_feedbacks, :accounted_for, :datetime

define these:
a project belongs to a company  (or has_one ?)
a company has_many projects
a project_rating belongs_to a project
a project has_many project_ratings
a company has_many project_ratings through project - no, I don't think it does.  company_id is in project but project_rating's id is not

Try Heroku:  https://polar-badlands-2176.herokuapp.com/
$ git remote -v
heroku	git@heroku.com:polar-badlands-2176.git (fetch)
heroku	git@heroku.com:polar-badlands-2176.git (push)
origin	git@github.com:pgarber/BUv2.git (fetch)
origin	git@github.com:pgarber/BUv2.git (push)
$ git push heroku master
a non-stylized landing page shows up at https://polar-badlands-2176.herokuapp.com/
set config.assets.compile = true  # no change
$ rake assets:precompile   # then push to heroku.  this worked!

I will need 
$ heroku run rake db:version
$ heroku run rake db:schema:load
$ heroku run rake db:populate
$ heroku run rake db:seed
$ heroku run rake db:crunch_ratings

Still can't create a user or sign in. - I had forgotten to db:seed.  Now, I can create a user. - it seems to be working 
$ heroku logs
  	
3/11/14 put mist styling on, in branch mist3
$ git push heroku mist3  / says non-master branch, skipping build.  I guess I can only get my master branch onto heroku

